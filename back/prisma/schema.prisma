// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}
model User {
  id                   String          @id
  username             String          @unique
  avatar               String
  firstName            String
  lastName             String
  messages             Message[]
  twoFactorAuthCode    String?
  twoFactorAuthEnabled Boolean         @default(false)
  firstLogin           Boolean         @default(true)
  groups               ChatGroup[]     @relation("UserGroup")
  sentRequests         friendRequest[] @relation("sent")
  receivedRequests     friendRequest[] @relation("received")
  friends              User[]          @relation("friend")
  symmenticfriends     User[]          @relation("friend")
  blockedByUsers       String[]
  blockedUsers         String[]
  status               String?
  sentToPlay           inviteToPlay[]  @relation("sent")
  receivedToPlay       inviteToPlay[]  @relation("received")
  gameResult          GameResult[]
  achievements        Achievement[]
}
model friendRequest {
  id         String   @id @default(uuid())
  sender     User     @relation("sent", fields: [senderId], references: [id])
  senderId   String
  receiver   User     @relation("received", fields: [receiverId], references: [id])
  receiverId String
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
model inviteToPlay {
  id         String   @id @default(uuid())
  sender     User     @relation("sent", fields: [senderId], references: [id])
  senderId   String
  receiver   User     @relation("received", fields: [receiverId], references: [id])
  receiverId String
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
model ChatGroup {
  id           String    @id @default(uuid())
  name         String?   @unique
  members      User[]    @relation("UserGroup")
  avatar       String?
  password     String?
  status       String?
  messages     Message[]
  owner        String?
  modes        String[]
  mutedUsers   String[]
  bannedUssers String[]
  type         String?
}
model Message {
  id          Int       @id @default(autoincrement())
  content     String
  createdAt   DateTime  @default(now())
  sender      User      @relation(fields: [userId], references: [id])
  userId      String
  chatGroup   ChatGroup @relation(fields: [chatGroupId], references: [id])
  chatGroupId String
}
model GameResult {
  id           String    @id @default(uuid())
  userId        String
  opponentId    String
  status        String
  userScore     Int
  opponentScore Int
  user          User     @relation(fields: [userId], references: [id])
}
model Achievement{
  id            String    @id @default(uuid())
  userId        String @unique
  achiev1       Boolean @default(false)
  achiev2       Boolean @default(false)
  achiev3       Boolean @default(false)
  achiev4       Boolean @default(false)
  achiev5       Boolean @default(false)
  achiev6       Boolean @default(false)
  user          User     @relation(fields: [userId], references: [id])
}
